{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport useSWR from 'swr';\nimport Axios from 'axios';\nimport Sidebar from '../../../components/Sidebar';\nimport { useAuthState } from '../../../context/auth';\nexport default function submit() {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    authenticated\n  } = useAuthState();\n  const router = useRouter();\n  const {\n    sub: subName\n  } = router.query;\n  const {\n    data: sub,\n    error\n  } = useSWR(subName ? `/subs/${subName}` : null);\n  if (error) router.push('/');\n\n  const submitPost = async event => {\n    event.preventDefault();\n    if (!authenticated) router.push('/login');\n    if (title.trim() === '') return;\n\n    try {\n      const {\n        data: post\n      } = await Axios.post(`/posts`, {\n        title: title.trim(),\n        body,\n        sub: sub.name\n      });\n      router.push(`/r/${sub.name}/${post.identifier}/${post.slug}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"container flex pt-5\",\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Submit to Readit\"\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"w-160\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"p-4 bg-white rounded\",\n        children: [/*#__PURE__*/_jsxs(\"h1\", {\n          className: \"mb-3 text-lg\",\n          children: [\"Submit a post to /r/\", subName]\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          onSubmit: submitPost,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"relative mb-2\",\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              className: \"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:border-gray-600\",\n              placeholder: \"Title\",\n              maxLength: 300,\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"absolute mb-2 text-sm text-gray-500 select-none\",\n              style: {\n                top: 11,\n                right: 10\n              },\n              children: [title.trim().length, \"/300\"]\n            })]\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            className: \"w-full p-3 border border-gray-300 rounded focus:outline-none focus:border-gray-600\",\n            value: body,\n            placeholder: \"Text (optional)\",\n            rows: 4,\n            onChange: e => setBody(e.target.value)\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsx(\"button\", {\n              className: \"px-3 py-1 blue button\",\n              type: \"submit\",\n              disabled: title.trim().length === 0,\n              children: \"Submit\"\n            })\n          })]\n        })]\n      })\n    }), sub && /*#__PURE__*/_jsx(Sidebar, {\n      sub: sub\n    })]\n  });\n} // protects route from access by unauthenticated user\n\nexport const getServerSideProps = async ({\n  req,\n  res\n}) => {\n  try {\n    const cookie = req.headers.cookie;\n    if (!cookie) throw new Error('Missing auth token cookie');\n    await Axios.get('/auth/me', {\n      headers: {\n        cookie\n      }\n    });\n    return {\n      props: {}\n    };\n  } catch (err) {\n    res.writeHead(307, {\n      Location: '/login'\n    }).end();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}