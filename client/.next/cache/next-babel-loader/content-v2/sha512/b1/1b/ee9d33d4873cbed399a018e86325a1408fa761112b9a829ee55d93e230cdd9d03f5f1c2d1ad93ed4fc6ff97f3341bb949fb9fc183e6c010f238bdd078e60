{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/Users/bleb/DEV/personal/projects for CODE page/readit_clone/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport useSWR, { useSWRInfinite } from 'swr';\nimport Link from 'next/link';\nimport Image from 'next/image'; // import { GetServerSideProps } from 'next';\n// types\n\nimport PostCard from '../components/PostCard';\nimport { useAuthState } from '../context/auth';\nexport default function Home() {\n  var _ref;\n\n  // WITHOUT USING SWR\n  // const [posts, setPosts] = useState<Post[]>([]);\n  // useEffect(() => {\n  //   Axios.get('/posts')\n  //     .then((res) => setPosts(res.data))\n  //     .catch((err) => console.log(err));\n  // }, []);\n  var _useState = useState(''),\n      observedPost = _useState[0],\n      setObservedPost = _useState[1];\n\n  var _useSWR = useSWR('misc/top-subs'),\n      topSubs = _useSWR.data;\n\n  var description = \"Readit is a network of people who communities based on people's interests. Find communities you're interested in, and become a part of an online community!\";\n  var title = 'Readit: home to the net';\n\n  var _useAuthState = useAuthState(),\n      authenticated = _useAuthState.authenticated;\n\n  var _useSWRInfinite = useSWRInfinite(function (index) {\n    return \"/posts?page=\".concat(index);\n  }, {\n    revalidateAll: true\n  }),\n      data = _useSWRInfinite.data,\n      error = _useSWRInfinite.error,\n      mutate = _useSWRInfinite.mutate,\n      page = _useSWRInfinite.size,\n      setPage = _useSWRInfinite.setSize,\n      isValidating = _useSWRInfinite.isValidating,\n      revalidate = _useSWRInfinite.revalidate;\n\n  var posts = data ? (_ref = []).concat.apply(_ref, _toConsumableArray(data)) : [];\n  useEffect(function () {\n    if (!posts || posts.length === 0) return;\n    var id = posts[posts.length - 1].identifier;\n\n    if (id !== observedPost) {\n      console.log('Reached bottom of tracked post');\n      setObservedPost(id);\n      observeElement(document.getElementById(id));\n    }\n  }, [posts]);\n\n  var observeElement = function observeElement(element) {\n    if (!element) return;\n    var observer = new IntersectionObserver(function (entries) {\n      if (entries[0].isIntersecting === true) {\n        setPage(page + 1);\n        observer.unobserve(element);\n      }\n    }, {\n      threshold: 1\n    });\n    observer.observe(element);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: description\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: description\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"twitter:description\",\n        content: description\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"twitter:title\",\n        content: title\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"container flex pt-4\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"w-full px-4 md:w-160 md:px-0\",\n        children: [!data && !error && /*#__PURE__*/_jsx(\"p\", {\n          className: \"text-lg text-center\",\n          children: \"Loading ..\"\n        }), posts === null || posts === void 0 ? void 0 : posts.map(function (post) {\n          return /*#__PURE__*/_jsx(PostCard, {\n            post: post,\n            revalidate: revalidate\n          }, post.identifier);\n        }), isValidating && posts.length > 0 && /*#__PURE__*/_jsx(\"p\", {\n          className: \"text-lg text-center\",\n          children: \"Loading More..\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"hidden ml-6 md:block w-80\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"bg-white rounded\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"p-4 border-b-2\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: \"text-lg font-semibold text-center\",\n              children: \"Top Communities\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: topSubs === null || topSubs === void 0 ? void 0 : topSubs.map(function (sub) {\n              return /*#__PURE__*/_jsxs(\"div\", {\n                className: \"flex items-center px-4 py-2 text-xs border-b\",\n                children: [/*#__PURE__*/_jsx(Link, {\n                  href: \"/r/\".concat(sub.name),\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    children: /*#__PURE__*/_jsx(Image, {\n                      src: sub.imageUrl,\n                      alt: \"Sub\",\n                      className: \"rounded-full cursor-pointer\",\n                      width: 6 * 16 / 4,\n                      height: 6 * 16 / 4\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Link, {\n                  href: \"/r/\".concat(sub.name),\n                  children: /*#__PURE__*/_jsxs(\"a\", {\n                    className: \"ml-2 font-bold hover:curser-pointer\",\n                    children: [\"/r/\", sub.name]\n                  })\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  className: \"ml-auto font-med\",\n                  children: sub.postCount\n                })]\n              }, sub.name);\n            })\n          }), authenticated && /*#__PURE__*/_jsx(\"div\", {\n            className: \"p-4 border-t-2\",\n            children: /*#__PURE__*/_jsx(Link, {\n              href: \"/subs/create\",\n              children: /*#__PURE__*/_jsx(\"a\", {\n                className: \"w-full px-2 py-1 blue button\",\n                children: \"Create Community\"\n              })\n            })\n          })]\n        })\n      })]\n    })]\n  });\n} ////////////////////////////////////////////\n// To implement either of the bellow versions of getServerSideProps\n// remove the useState and useEffect form the above component\n// and add {data} as the argument\n\n/* next.js default getServerSideProps */\n// export const getServerSideProps: GetServerSideProps = async (context) => {\n//   const res = await fetch(`https://.../data`);\n//   const data = await res.json();\n//   if (!data) {\n//     return {\n//       redirect: {\n//         destination: '/',\n//         permanent: false,\n//       },\n//     };\n//   }\n//   return {\n//     props: {},\n//   };\n// };\n\n/* or getServerSideProps using axios */\n// export const getServerSideProps: GetServerSideProps = async (context) => {\n//   try {\n//     const res = await Axios.get('/posts');\n//     return { props: { posts: res.data } };\n//   } catch (error) {\n//     return { props: { error: 'Something went wrong' } };\n//   }\n// };","map":null,"metadata":{},"sourceType":"module"}