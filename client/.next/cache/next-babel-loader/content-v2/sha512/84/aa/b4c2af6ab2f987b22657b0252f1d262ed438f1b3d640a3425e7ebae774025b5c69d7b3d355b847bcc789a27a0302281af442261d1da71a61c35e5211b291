{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bleb/DEV/personal/projects for CODE page/readit_clone/client/src/context/auth.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useContext, useEffect, useReducer } from 'react';\nimport Axios from 'axios';\nconst StateContext = /*#__PURE__*/createContext({\n  authenticated: false,\n  user: null,\n  loading: true\n});\nconst DispatchContext = /*#__PURE__*/createContext(null);\n\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authenticated: true,\n        user: payload\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authenticated: false,\n        user: null\n      });\n\n    case 'STOP_LOADING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    default:\n      throw new Error(`Unknown action type: ${type}`);\n  }\n};\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: defaultDispatch\n  } = useReducer(reducer, {\n    user: null,\n    authenticated: false,\n    loading: true\n  });\n\n  const dispatch = (type, payload) => defaultDispatch({\n    type,\n    payload\n  });\n\n  useEffect(() => {\n    async function loadUser() {\n      try {\n        const res = await Axios.get('/auth/me');\n        dispatch('LOGIN', res.data);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        dispatch('STOP_LOADING');\n      }\n    }\n\n    loadUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\nexport const useAuthState = () => useContext(StateContext);\nexport const useAuthDispatch = () => useContext(DispatchContext);","map":{"version":3,"sources":["/Users/bleb/DEV/personal/projects for CODE page/readit_clone/client/src/context/auth.tsx"],"names":["createContext","useContext","useEffect","useReducer","Axios","StateContext","authenticated","user","loading","DispatchContext","reducer","state","type","payload","Error","AuthProvider","children","defaultDispatch","dispatch","loadUser","res","get","data","err","console","log","useAuthState","useAuthDispatch"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAeA,MAAMC,YAAY,gBAAGL,aAAa,CAAQ;AACxCM,EAAAA,aAAa,EAAE,KADyB;AAExCC,EAAAA,IAAI,EAAE,IAFkC;AAGxCC,EAAAA,OAAO,EAAE;AAH+B,CAAR,CAAlC;AAMA,MAAMC,eAAe,gBAAGT,aAAa,CAAC,IAAD,CAArC;;AAEA,MAAMU,OAAO,GAAG,CAACC,KAAD,EAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAf,KAA6C;AAC3D,UAAQD,IAAR;AACE,SAAK,OAAL;AACE,6CACKD,KADL;AAEEL,QAAAA,aAAa,EAAE,IAFjB;AAGEC,QAAAA,IAAI,EAAEM;AAHR;;AAKF,SAAK,QAAL;AACE,6CACKF,KADL;AAEEL,QAAAA,aAAa,EAAE,KAFjB;AAGEC,QAAAA,IAAI,EAAE;AAHR;;AAKF,SAAK,cAAL;AACE,6CAAYI,KAAZ;AAAmBH,QAAAA,OAAO,EAAE;AAA5B;;AACF;AACE,YAAM,IAAIM,KAAJ,CAAW,wBAAuBF,IAAK,EAAvC,CAAN;AAhBJ;AAkBD,CAnBD;;AAqBA,OAAO,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiD;AAC3E,QAAM;AAAA,OAACL,KAAD;AAAA,OAAQM;AAAR,MAA2Bd,UAAU,CAACO,OAAD,EAAU;AACnDH,IAAAA,IAAI,EAAE,IAD6C;AAEnDD,IAAAA,aAAa,EAAE,KAFoC;AAGnDE,IAAAA,OAAO,EAAE;AAH0C,GAAV,CAA3C;;AAMA,QAAMU,QAAQ,GAAG,CAACN,IAAD,EAAeC,OAAf,KACfI,eAAe,CAAC;AAAEL,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CADjB;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,UAAV,CAAlB;AACAH,QAAAA,QAAQ,CAAC,OAAD,EAAUE,GAAG,CAACE,IAAd,CAAR;AACD,OAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OALD,SAKU;AACRL,QAAAA,QAAQ,CAAC,cAAD,CAAR;AACD;AACF;;AACDC,IAAAA,QAAQ;AACT,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAED,QAAjC;AAAA,2BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAEP,KAA9B;AAAA,gBAAsCK;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BM;AA+BP,OAAO,MAAMU,YAAY,GAAG,MAAMzB,UAAU,CAACI,YAAD,CAArC;AACP,OAAO,MAAMsB,eAAe,GAAG,MAAM1B,UAAU,CAACQ,eAAD,CAAxC","sourcesContent":["import { createContext, useContext, useEffect, useReducer } from 'react';\nimport Axios from 'axios';\n\nimport { User } from '../types';\n\ninterface State {\n  authenticated: boolean;\n  user: User | undefined;\n  loading: boolean;\n}\n\ninterface Action {\n  type: string;\n  payload: any;\n}\n\nconst StateContext = createContext<State>({\n  authenticated: false,\n  user: null,\n  loading: true,\n});\n\nconst DispatchContext = createContext(null);\n\nconst reducer = (state: State, { type, payload }: Action) => {\n  switch (type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        authenticated: true,\n        user: payload,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        authenticated: false,\n        user: null,\n      };\n    case 'STOP_LOADING':\n      return { ...state, loading: false };\n    default:\n      throw new Error(`Unknown action type: ${type}`);\n  }\n};\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [state, defaultDispatch] = useReducer(reducer, {\n    user: null,\n    authenticated: false,\n    loading: true,\n  });\n\n  const dispatch = (type: string, payload?: any) =>\n    defaultDispatch({ type, payload });\n\n  useEffect(() => {\n    async function loadUser() {\n      try {\n        const res = await Axios.get('/auth/me');\n        dispatch('LOGIN', res.data);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        dispatch('STOP_LOADING');\n      }\n    }\n    loadUser();\n  }, []);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>{children}</StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport const useAuthState = () => useContext(StateContext);\nexport const useAuthDispatch = () => useContext(DispatchContext);\n"]},"metadata":{},"sourceType":"module"}