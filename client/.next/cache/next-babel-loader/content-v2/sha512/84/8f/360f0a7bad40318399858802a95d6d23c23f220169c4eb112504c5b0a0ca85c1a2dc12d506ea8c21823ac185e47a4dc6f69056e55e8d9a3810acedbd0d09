{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bleb/DEV/personal/projects for CODE page/readit_clone/client/src/pages/r/[sub].tsx\";\nimport { createRef, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport PostCard from '../../components/PostCard';\nimport Image from 'next/image';\nimport classNames from 'classnames';\nimport { useAuthState } from '../../context/auth';\nimport Axios from 'axios';\nimport Sidebar from '../../components/Sidebar';\nexport default function SubPage() {\n  // Local state\n  const {\n    0: ownSub,\n    1: setOwnSub\n  } = useState(false); // Global state\n\n  const {\n    authenticated,\n    user\n  } = useAuthState(); // Utils\n\n  const router = useRouter();\n  const fileInputRef = /*#__PURE__*/createRef();\n  const subName = router.query.sub;\n  const {\n    data: sub,\n    error,\n    revalidate\n  } = useSWR(subName ? `/subs/${subName}` : null); // console.log({ sub: sub })\n  // console.log({ subposts: sub.posts })\n\n  useEffect(() => {\n    if (!sub) return;\n    setOwnSub(authenticated && (user.username === sub.username || user.username === 'brandon'));\n  }, [sub]);\n\n  const openFileInput = type => {\n    if (!ownSub) return;\n    fileInputRef.current.name = type;\n    fileInputRef.current.click();\n  };\n\n  const uploadImage = async event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', fileInputRef.current.name);\n\n    try {\n      await Axios.post(`/subs/${sub.name}/image`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      revalidate();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (error) router.push('/');\n  let postsMarkup;\n\n  if (!sub) {\n    postsMarkup = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-center\",\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this);\n  } else if (sub.posts.length === 0) {\n    postsMarkup = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-center\",\n      children: \"No posts submitted yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this);\n  } else {\n    postsMarkup = sub.posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post,\n      revalidate: revalidate\n    }, post.identifier, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: sub === null || sub === void 0 ? void 0 : sub.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), sub && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        hidden: true,\n        ref: fileInputRef,\n        onChange: uploadImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames('bg-blue-500', {\n            'cursor-pointer': ownSub\n          }),\n          onClick: () => openFileInput('banner'),\n          children: sub.bannerUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-56 bg-blue-500\",\n            style: {\n              backgroundImage: `url(${sub.bannerUrl})`,\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: 'cover',\n              backgroundPosition: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-20 bg-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-20 bg-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container relative flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute\",\n              style: {\n                top: -15\n              },\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: sub.imageUrl,\n                alt: \"Sub\",\n                className: classNames('rounded-full', {\n                  'cursor-pointer': ownSub\n                }),\n                onClick: () => openFileInput('image'),\n                width: 70,\n                height: 70\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pt-2 pl-24\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"mb-1 text-3xl font-bold\",\n                  children: sub.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-bold text-gray-600\",\n                children: [\"/r/\", sub.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-160\",\n          children: postsMarkup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n          sub: sub\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/bleb/DEV/personal/projects for CODE page/readit_clone/client/src/pages/r/[sub].tsx"],"names":["createRef","useEffect","useState","Head","useRouter","useSWR","PostCard","Image","classNames","useAuthState","Axios","Sidebar","SubPage","ownSub","setOwnSub","authenticated","user","router","fileInputRef","subName","query","sub","data","error","revalidate","username","openFileInput","type","current","name","click","uploadImage","event","file","target","files","formData","FormData","append","post","headers","err","console","log","push","postsMarkup","posts","length","map","identifier","title","bannerUrl","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","top","imageUrl"],"mappings":"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","sourcesContent":["import { ChangeEvent, createRef, useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport useSWR from 'swr'\nimport PostCard from '../../components/PostCard'\nimport Image from 'next/image'\nimport classNames from 'classnames'\n\nimport { Sub } from '../../types'\nimport { useAuthState } from '../../context/auth'\nimport Axios from 'axios'\nimport Sidebar from '../../components/Sidebar'\n\nexport default function SubPage() {\n  // Local state\n  const [ownSub, setOwnSub] = useState(false)\n  // Global state\n  const { authenticated, user } = useAuthState()\n  // Utils\n  const router = useRouter()\n  const fileInputRef = createRef<HTMLInputElement>()\n\n  const subName = router.query.sub\n\n  const { data: sub, error, revalidate } = useSWR<Sub>(\n    subName ? `/subs/${subName}` : null\n  )\n  // console.log({ sub: sub })\n  // console.log({ subposts: sub.posts })\n\n  useEffect(() => {\n    if (!sub) return\n    setOwnSub(\n      authenticated &&\n        (user.username === sub.username || user.username === 'brandon')\n    )\n  }, [sub])\n\n  const openFileInput = (type: string) => {\n    if (!ownSub) return\n    fileInputRef.current.name = type\n    fileInputRef.current.click()\n  }\n\n  const uploadImage = async (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files[0]\n\n    const formData = new FormData()\n    formData.append('file', file)\n    formData.append('type', fileInputRef.current.name)\n\n    try {\n      await Axios.post<Sub>(`/subs/${sub.name}/image`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      })\n\n      revalidate()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  if (error) router.push('/')\n\n  let postsMarkup\n  if (!sub) {\n    postsMarkup = <p className=\"text-lg text-center\">Loading..</p>\n  } else if (sub.posts.length === 0) {\n    postsMarkup = <p className=\"text-lg text-center\">No posts submitted yet</p>\n  } else {\n    postsMarkup = sub.posts.map((post) => (\n      <PostCard key={post.identifier} post={post} revalidate={revalidate} />\n    ))\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{sub?.title}</title>\n      </Head>\n      {sub && (\n        <>\n          <input\n            type=\"file\"\n            hidden={true}\n            ref={fileInputRef}\n            onChange={uploadImage}\n          />\n          {/* Sub info and images */}\n          <div>\n            {/* Banner image */}\n            <div\n              className={classNames('bg-blue-500', {\n                'cursor-pointer': ownSub,\n              })}\n              onClick={() => openFileInput('banner')}\n            >\n              {sub.bannerUrl ? (\n                <div\n                  className=\"h-56 bg-blue-500\"\n                  style={{\n                    backgroundImage: `url(${sub.bannerUrl})`,\n                    backgroundRepeat: 'no-repeat',\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                  }}\n                ></div>\n              ) : (\n                <div className=\"h-20 bg-blue-500\"></div>\n              )}\n            </div>\n            {/* Sub meta data  */}\n            <div className=\"h-20 bg-white\">\n              <div className=\"container relative flex\">\n                <div className=\"absolute\" style={{ top: -15 }}>\n                  <Image\n                    src={sub.imageUrl}\n                    alt=\"Sub\"\n                    className={classNames('rounded-full', {\n                      'cursor-pointer': ownSub,\n                    })}\n                    onClick={() => openFileInput('image')}\n                    width={70}\n                    height={70}\n                  />\n                </div>\n                <div className=\"pt-2 pl-24\">\n                  <div className=\"flex items-center\">\n                    <h1 className=\"mb-1 text-3xl font-bold\">{sub.title}</h1>\n                  </div>\n                  <p className=\"text-sm font-bold text-gray-600\">\n                    /r/{sub.name}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Posts & Sidebar */}\n          <div className=\"container flex pt-4\">\n            <div className=\"w-160\">{postsMarkup}</div>\n            <Sidebar sub={sub} />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}