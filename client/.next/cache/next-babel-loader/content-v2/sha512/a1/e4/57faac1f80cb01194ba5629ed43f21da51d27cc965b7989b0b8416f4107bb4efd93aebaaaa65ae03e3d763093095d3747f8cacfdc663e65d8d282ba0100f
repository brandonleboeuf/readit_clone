{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bleb/DEV/personal/projects for CODE page/readit_clone/client/src/pages/index.tsx\";\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport useSWR, { useSWRInfinite } from 'swr';\nimport Link from 'next/link';\nimport Image from 'next/image'; // import { GetServerSideProps } from 'next';\n// types\n\nimport PostCard from '../components/PostCard';\nimport { useAuthState } from '../context/auth';\nexport default function Home() {\n  // WITHOUT USING SWR\n  // const [posts, setPosts] = useState<Post[]>([]);\n  // useEffect(() => {\n  //   Axios.get('/posts')\n  //     .then((res) => setPosts(res.data))\n  //     .catch((err) => console.log(err));\n  // }, []);\n  const {\n    0: observedPost,\n    1: setObservedPost\n  } = useState('');\n  const {\n    data: topSubs\n  } = useSWR('misc/top-subs');\n  const description = \"Readit is a network of people who communities based on people's interests. Find communities you're interested in, and become a part of an online community!\";\n  const title = 'Readit: home to the net';\n  const {\n    authenticated\n  } = useAuthState();\n  const {\n    data,\n    error,\n    mutate,\n    size: page,\n    setSize: setPage,\n    isValidating,\n    revalidate\n  } = useSWRInfinite(index => `/posts?page=${index}`, {\n    revalidateAll: true\n  });\n  const posts = data ? [].concat(...data) : [];\n  useEffect(() => {\n    if (!posts || posts.length === 0) return;\n    const id = posts[posts.length - 1].identifier;\n\n    if (id !== observedPost) {\n      console.log('Reached bottom of tracked post');\n      setObservedPost(id);\n      observeElement(document.getElementById(id));\n    }\n  }, [posts]);\n\n  const observeElement = element => {\n    if (!element) return;\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting === true) {\n        setPage(page + 1);\n        observer.unobserve(element);\n      }\n    }, {\n      threshold: 1\n    });\n    observer.observe(element);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"twitter:description\",\n        content: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"twitter:title\",\n        content: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container flex pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full px-4 md:w-160 md:px-0\",\n        children: [!data && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-center\",\n          children: \"Loading ..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 31\n        }, this), posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post,\n          revalidate: revalidate\n        }, post.identifier, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)), isValidating && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-center\",\n          children: \"Loading More..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden ml-6 md:block w-80\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-b-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-semibold text-center\",\n              children: \"Top Communities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: topSubs === null || topSubs === void 0 ? void 0 : topSubs.map(sub => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center px-4 py-2 text-xs border-b\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: `/r/${sub.name}`,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: sub.imageUrl,\n                    alt: \"Sub\",\n                    className: \"rounded-full cursor-pointer\",\n                    width: 6 * 16 / 4,\n                    height: 6 * 16 / 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: `/r/${sub.name}`,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"ml-2 font-bold hover:curser-pointer\",\n                  children: [\"/r/\", sub.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ml-auto font-med\",\n                children: sub.postCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, sub.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), authenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-t-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/subs/create\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"w-full px-2 py-1 blue button\",\n                children: \"Create Community\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} ////////////////////////////////////////////\n// To implement either of the bellow versions of getServerSideProps\n// remove the useState and useEffect form the above component\n// and add {data} as the argument\n\n/* next.js default getServerSideProps */\n// export const getServerSideProps: GetServerSideProps = async (context) => {\n//   const res = await fetch(`https://.../data`);\n//   const data = await res.json();\n//   if (!data) {\n//     return {\n//       redirect: {\n//         destination: '/',\n//         permanent: false,\n//       },\n//     };\n//   }\n//   return {\n//     props: {},\n//   };\n// };\n\n/* or getServerSideProps using axios */\n// export const getServerSideProps: GetServerSideProps = async (context) => {\n//   try {\n//     const res = await Axios.get('/posts');\n//     return { props: { posts: res.data } };\n//   } catch (error) {\n//     return { props: { error: 'Something went wrong' } };\n//   }\n// };","map":{"version":3,"sources":["/Users/bleb/DEV/personal/projects for CODE page/readit_clone/client/src/pages/index.tsx"],"names":["useEffect","useState","Head","useSWR","useSWRInfinite","Link","Image","PostCard","useAuthState","Home","observedPost","setObservedPost","data","topSubs","description","title","authenticated","error","mutate","size","page","setSize","setPage","isValidating","revalidate","index","revalidateAll","posts","concat","length","id","identifier","console","log","observeElement","document","getElementById","element","observer","IntersectionObserver","entries","isIntersecting","unobserve","threshold","observe","map","post","sub","name","imageUrl","postCount"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport useSWR, { useSWRInfinite } from 'swr'\nimport Link from 'next/link'\nimport Image from 'next/image'\n// import { GetServerSideProps } from 'next';\n\n// types\nimport { Sub, Post } from '../types'\n\nimport PostCard from '../components/PostCard'\nimport { useAuthState } from '../context/auth'\n\nexport default function Home() {\n  // WITHOUT USING SWR\n  // const [posts, setPosts] = useState<Post[]>([]);\n\n  // useEffect(() => {\n  //   Axios.get('/posts')\n  //     .then((res) => setPosts(res.data))\n  //     .catch((err) => console.log(err));\n  // }, []);\n  const [observedPost, setObservedPost] = useState('')\n\n  const { data: topSubs } = useSWR<Sub[]>('misc/top-subs')\n\n  const description =\n    \"Readit is a network of people who communities based on people's interests. Find communities you're interested in, and become a part of an online community!\"\n\n  const title = 'Readit: home to the net'\n\n  const { authenticated } = useAuthState()\n\n  const {\n    data,\n    error,\n    mutate,\n    size: page,\n    setSize: setPage,\n    isValidating,\n    revalidate,\n  } = useSWRInfinite<Post[]>((index) => `/posts?page=${index}`, {\n    revalidateAll: true,\n  })\n\n  const posts: Post[] = data ? [].concat(...data) : []\n\n  useEffect(() => {\n    if (!posts || posts.length === 0) return\n\n    const id = posts[posts.length - 1].identifier\n\n    if (id !== observedPost) {\n      console.log('Reached bottom of tracked post')\n      setObservedPost(id)\n      observeElement(document.getElementById(id))\n    }\n  }, [posts])\n\n  const observeElement = (element: HTMLElement) => {\n    if (!element) return\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting === true) {\n          setPage(page + 1)\n          observer.unobserve(element)\n        }\n      },\n      { threshold: 1 }\n    )\n    observer.observe(element)\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"twitter:description\" content={description} />\n        <meta property=\"twitter:title\" content={title} />\n      </Head>\n      <div className=\"container flex pt-4\">\n        {/* POST FEED  */}\n        <div className=\"w-full px-4 md:w-160 md:px-0\">\n          {!data && !error && <p className=\"text-lg text-center\">Loading ..</p>}\n          {posts?.map((post) => (\n            <PostCard\n              post={post}\n              key={post.identifier}\n              revalidate={revalidate}\n            />\n          ))}\n          {isValidating && posts.length > 0 && (\n            <p className=\"text-lg text-center\">Loading More..</p>\n          )}\n        </div>\n        {/* SIDEBAR */}\n        <div className=\"hidden ml-6 md:block w-80\">\n          <div className=\"bg-white rounded\">\n            <div className=\"p-4 border-b-2\">\n              <p className=\"text-lg font-semibold text-center\">\n                Top Communities\n              </p>\n            </div>\n            <div>\n              {topSubs?.map((sub) => (\n                <div\n                  key={sub.name}\n                  className=\"flex items-center px-4 py-2 text-xs border-b\"\n                >\n                  <Link href={`/r/${sub.name}`}>\n                    <a>\n                      <Image\n                        src={sub.imageUrl}\n                        alt=\"Sub\"\n                        className=\"rounded-full cursor-pointer\"\n                        width={(6 * 16) / 4}\n                        height={(6 * 16) / 4}\n                      />\n                    </a>\n                  </Link>\n                  <Link href={`/r/${sub.name}`}>\n                    <a className=\"ml-2 font-bold hover:curser-pointer\">\n                      /r/{sub.name}\n                    </a>\n                  </Link>\n                  <p className=\"ml-auto font-med\">{sub.postCount}</p>\n                </div>\n              ))}\n            </div>\n            {authenticated && (\n              <div className=\"p-4 border-t-2\">\n                <Link href=\"/subs/create\">\n                  <a className=\"w-full px-2 py-1 blue button\">\n                    Create Community\n                  </a>\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n////////////////////////////////////////////\n// To implement either of the bellow versions of getServerSideProps\n// remove the useState and useEffect form the above component\n// and add {data} as the argument\n\n/* next.js default getServerSideProps */\n// export const getServerSideProps: GetServerSideProps = async (context) => {\n//   const res = await fetch(`https://.../data`);\n//   const data = await res.json();\n\n//   if (!data) {\n//     return {\n//       redirect: {\n//         destination: '/',\n//         permanent: false,\n//       },\n//     };\n//   }\n\n//   return {\n//     props: {},\n//   };\n// };\n\n/* or getServerSideProps using axios */\n// export const getServerSideProps: GetServerSideProps = async (context) => {\n//   try {\n//     const res = await Axios.get('/posts');\n\n//     return { props: { posts: res.data } };\n//   } catch (error) {\n//     return { props: { error: 'Something went wrong' } };\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}